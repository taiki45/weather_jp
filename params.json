{"name":"weather_jp","tagline":"Fetch Japan weather info as Ruby object easily.","body":"# weather_jp\r\nJapan weather infomation API wrapper. Fetch Japan weather status or forecast as Ruby object easily.\r\n\r\n## V2 upgrade guides\r\nThe backend server returns differrnt contents from before. So V1 is not working. Please update to V2.\r\n\r\nAnd V2 contains some of new features, deprecations and removales.\r\n\r\n- `WeatherJp::City` now available. You can get latitude/longitude of the city.\r\n- `WeatherJp::Weather#current`. The current weather is a little bit differrnt from day weather forecast.\r\n  - have: `temperature`, `wind_speed`, `wind_text`\r\n  - not have: `precip`, `high`, `low`.\r\n- `WeatherJp::Weather#each` now contains the `DayWeather` object which represents current weather status. If you do not want current weather status, use `each_without_current` or `except_current` method.\r\n- Remove `customize_to_s` method. This feature will be re-added as configurable procedure.\r\n- Remove option from `WeatherJp.get`. If you use these option, use `WeatherJp::Weather#for`.\r\n\r\nSee deprecations at [API document page](http://rubydoc.info/gems/weather_jp/).\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'weather_jp'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle install\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install weather_jp\r\n\r\n## Usage\r\n\r\n```ruby\r\n# creat weather object in differrnt ways\r\ntokyo = WeatherJp.get :tokyo\r\nakiba = WeatherJp.get \"秋葉原\"\r\ntsuyama = WeatherJp.get \"津山\"\r\n\r\n# get weather info as String\r\ntokyo.today.to_s\r\n  #=> can be \"東京都 東京の天気は曇りのち晴れ、最高気温34度...etc\"\r\n\r\n# or your have unparsed string\r\nWeatherJp.parse(\"今日の香川県の天気教えて下さい\").to_s\r\n  #=> \"香川県 高松の今日の天気は曇のち晴れ 最高気温25度 最低気温17度 降水確率は20% です。\"\r\n\r\n# to get weather info in differrnt ways\r\ntokyo.today.text #=> can be \"晴れ\"\r\ntokyo.tomorrow.precip #=> can be 10\r\nakiba.day_after_tomorrow.to_s\r\n\r\n# yields DayWeather object\r\ntokyo.each do |w|\r\n  puts w.city_name\r\n  puts w.date\r\n  puts w.date_text\r\n  puts w.text\r\n  puts w.high\r\n  puts w.low\r\n  puts w.precip\r\nend\r\n\r\n# You can use WeatherJp::City object\r\ntokyo.city => WeatherJp::City\r\n[tokyo.city.longitude, tokyo.city.latitude]\r\n\r\nakiba.map {|w| [w.date_text, w.text] }\r\n\r\n# or use as simple Array or Hash\r\ntokyo.to_a\r\nakiba.weathers\r\ntsuyama.each {|w| p w.to_hash }\r\n```\r\n\r\nSee more detail in [API document page](http://rubydoc.info/gems/weather_jp/).\r\n\r\n## Requires\r\n\r\nRuby >= 2.0.0\r\n\r\n## Documents\r\n\r\nhttp://rubydoc.info/gems/weather_jp/\r\n\r\n## Author\r\n\r\n[@taiki45](http://taiki45.github.io/)\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\nFeel free to any requests or bug reports, issues, comments.\r\n\r\nThank you :)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}